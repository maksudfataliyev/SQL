CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100)
);

1. INSERT INTO Customers (CustomerID, FirstName, LastName, Email)  
VALUES 
    (1, 'John', 'Smith', 'johnsmith@gmail.com'),
    (2, 'Lebron', 'James', 'lebronjames@gmail.com'),
    (3, 'Michael', 'Jordan', 'michaeljordan@gmail.com');

2. UPDATE Customers  
SET Email = 'smithjohn@gmail.com'  
WHERE CustomerID = 1;


3. DELETE FROM Customers
WHERE CustomerID = 5;

4. SELECT * FROM Customers
ORDER BY LastName;

5. INSERT INTO Customers (CustomerID, FirstName, LastName, Email)  
VALUES
    (4, 'Иван', 'Иванов', 'ivan.ivanov@example.com'),
    (5, 'Мария', 'Петрова', 'maria.petrova@example.com'),
    (6, 'Алексей', 'Сидоров', 'alexey.sidorov@example.com');


CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    TotalAmount DECIMAL(10, 2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

6. INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount)  
VALUES (1, 1, '2024-02-09', 150.50);

7. UPDATE Orders  
SET TotalAmount = 177.32  
WHERE OrderID = 2;

8. DELETE FROM Orders  
WHERE OrderID = 3;

9. SELECT * FROM Orders  
WHERE CustomerID = 1;

10. SELECT * FROM Orders  
WHERE YEAR(OrderDate) = 2023;


CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Price DECIMAL(10, 2)
);


11. INSERT INTO Products (ProductID, ProductName, Price)  
VALUES (1, 'Ноутбук', 1200.99);


12. UPDATE Products  
SET Price = 250.75  
WHERE ProductID = 2;


13. DELETE FROM Products  
WHERE ProductID = 4;


14. SELECT * FROM Products  
WHERE Price > 100;

15. SELECT * FROM Products  
WHERE Price <= 50;

CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    Price DECIMAL(10, 2),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

16. INSERT INTO Orders (OrderDetailID, OrderID, ProductID, Quantity, Price)  
VALUES (1, 1, 2, 5, 325.50);


17. UPDATE ORDERDETAILS  
SET QUANTITY = 10  
WHERE ORDERDETAILID = 1;

18. DELETE FROM ORDERDETAILS  
WHERE ORDERDETAILID = 2;

19. SELECT * FROM ORDERDETAILS  
WHERE ORDERID = 1;

20. SELECT * FROM ORDERDETAILS  
WHERE PRODUCTID = 2;

21. SELECT O.ORDERID, C.FIRSTNAME, C.LASTNAME, O.ORDERDATE, O.TOTALAMOUNT  
FROM ORDERS O  
INNER JOIN CUSTOMERS C ON O.CUSTOMERID = C.CUSTOMERID;

22. SELECT P.PRODUCTNAME, C.FIRSTNAME, C.LASTNAME, OD.QUANTITY  
FROM ORDERDETAILS OD  
INNER JOIN ORDERS O ON OD.ORDERID = O.ORDERID  
INNER JOIN CUSTOMERS C ON O.CUSTOMERID = C.CUSTOMERID  
INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID;

23. SELECT O.ORDERID, C.FIRSTNAME, C.LASTNAME, O.ORDERDATE, O.TOTALAMOUNT  
FROM ORDERS O  
LEFT JOIN CUSTOMERS C ON O.CUSTOMERID = C.CUSTOMERID;

24. SELECT O.ORDERID, P.PRODUCTNAME, OD.QUANTITY  
FROM ORDERS O  
INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID  
INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID;

25. SELECT C.CUSTOMERID, C.FIRSTNAME, C.LASTNAME, O.ORDERID, O.ORDERDATE, O.TOTALAMOUNT  
FROM CUSTOMERS C  
LEFT JOIN ORDERS O ON C.CUSTOMERID = O.CUSTOMERID;

26. SELECT P.PRODUCTID, P.PRODUCTNAME, O.ORDERID, O.ORDERDATE  
FROM PRODUCTS P  
RIGHT JOIN ORDERDETAILS OD ON P.PRODUCTID = OD.PRODUCTID  
RIGHT JOIN ORDERS O ON OD.ORDERID = O.ORDERID;

27. SELECT O.ORDERID, P.PRODUCTNAME, OD.QUANTITY, OD.PRICE  
FROM ORDERS O  
INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID  
INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID;

28. SELECT C.FIRSTNAME, C.LASTNAME, O.ORDERID, P.PRODUCTNAME, OD.QUANTITY, OD.PRICE  
FROM CUSTOMERS C  
INNER JOIN ORDERS O ON C.CUSTOMERID = O.CUSTOMERID  
INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID  
INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID;

29. SELECT FIRSTNAME, LASTNAME  
FROM CUSTOMERS  
WHERE CUSTOMERID IN (SELECT CUSTOMERID FROM ORDERS WHERE TOTALAMOUNT > 500);

30. SELECT PRODUCTNAME  
FROM PRODUCTS  
WHERE PRODUCTID IN (SELECT PRODUCTID FROM ORDERDETAILS GROUP BY PRODUCTID HAVING SUM(QUANTITY) > 10);

31. SELECT CUSTOMERID, (SELECT SUM(TOTALAMOUNT) FROM ORDERS WHERE ORDERS.CUSTOMERID = CUSTOMERS.CUSTOMERID) AS TOTAL_SPENT  
FROM CUSTOMERS;

32. SELECT PRODUCTNAME  
FROM PRODUCTS  
WHERE PRICE > (SELECT AVG(PRICE) FROM PRODUCTS);

33. SELECT C.FIRSTNAME, C.LASTNAME, O.ORDERID, O.ORDERDATE, P.PRODUCTNAME, OD.QUANTITY, OD.PRICE  
FROM CUSTOMERS C  
INNER JOIN ORDERS O ON C.CUSTOMERID = O.CUSTOMERID  
INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID  
INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID;

34. SELECT C.FIRSTNAME, C.LASTNAME, O.ORDERID, P.PRODUCTNAME, OD.QUANTITY, OD.PRICE  
FROM CUSTOMERS C  
INNER JOIN ORDERS O ON C.CUSTOMERID = O.CUSTOMERID  
INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID  
INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID;

35. SELECT C.FIRSTNAME, C.LASTNAME, P.PRODUCTNAME, SUM(OD.QUANTITY * OD.PRICE) AS TOTAL_COST  
FROM CUSTOMERS C  
INNER JOIN ORDERS O ON C.CUSTOMERID = O.CUSTOMERID  
INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID  
INNER JOIN PRODUCTS P ON OD.PRODUCTID = P.PRODUCTID  
GROUP BY C.FIRSTNAME, C.LASTNAME, P.PRODUCTNAME;

36. SELECT O.ORDERID, SUM(OD.QUANTITY * OD.PRICE) AS TOTAL_COST  
FROM ORDERS O  
INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID  
GROUP BY O.ORDERID  
HAVING TOTAL_COST > 1000;

37. SELECT C.FIRSTNAME, C.LASTNAME  
FROM CUSTOMERS C  
WHERE CUSTOMERID IN (SELECT CUSTOMERID FROM ORDERS GROUP BY CUSTOMERID HAVING AVG(TOTALAMOUNT) > (SELECT AVG(TOTALAMOUNT) FROM ORDERS));

38. SELECT CUSTOMERID, COUNT(ORDERID) AS ORDER_COUNT  
FROM ORDERS  
GROUP BY CUSTOMERID;

39. SELECT PRODUCTID, SUM(QUANTITY) AS TOTAL_QUANTITY  
FROM ORDERDETAILS  
GROUP BY PRODUCTID  
HAVING TOTAL_QUANTITY > 3;

40. SELECT C.FIRSTNAME, C.LASTNAME, O.ORDERID, SUM(OD.QUANTITY) AS TOTAL_ITEMS  
FROM CUSTOMERS C  
INNER JOIN ORDERS O ON C.CUSTOMERID = O.CUSTOMERID  
INNER JOIN ORDERDETAILS OD ON O.ORDERID = OD.ORDERID  
GROUP BY C.FIRSTNAME, C.LASTNAME, O.ORDERID;


