CREATE TABLE CURATORS(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    NAME NVARCHAR(MAX) NOT NULL CHECK (LEN(NAME) > 0),
    SURNAME NVARCHAR(MAX) NOT NULL CHECK(LEN(SURNAME) > 0),
)
CREATE TABLE DEPARTMENTS(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    FINANCING MONEY NOT NULL CHECK(FINANCING < 0) UNIQUE,
    NAME NVARCHAR(100) NOT NULL CHECK(LEN(NAME) > 0) UNIQUE,
    FACULTYID INT NOT NULL FOREIGN KEY references FACULTIES(ID)
)

CREATE TABLE FACULTIES(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    FINANCING MONEY NOT NULL CHECK(FINANCING < 0) DEFAULT 0,
    NAME NVARCHAR(100) NOT NULL CHECK(NAME > 0) UNIQUE
)
CREATE TABLE GROUPS(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    NAME NVARCHAR(100) NOT NULL CHECK(NAME > 0) UNIQUE,
    YEAR INT NOT NULL CHECK(1<YEAR<5),
    DEPARTMENTID INT NOT NULL FOREIGN KEY REFERENCES DEPARTMENTS(ID)
)

CREATE TABLE GROUPSCURATORS(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    GROUPID INT NOT NULL FOREIGN KEY REFERENCES GROUPS(ID),
    CURATORID INT NOT NULL FOREIGN KEY REFERENCES CURATORS(ID)
)

CREATE TABLE GROUPSLECTURES(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    GROUPID INT NOT NULL FOREIGN KEY REFERENCES GROUPS(ID),
    LECTUREID INT NOT NULL FOREIGN KEY REFERENCES LECTURES(ID)
)

CREATE TABLE LECTURES(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    LECTUREROOM NVARCHAR(MAX) NOT NULL CHECK(LEN(LECTUREROOM) > 0),
    SUBJECTID INT NOT NULL FOREIGN KEY REFERENCES SUBJECTS(ID),
    TEACHERID INT NOT NULL FOREIGN KEY REFERENCES TEACHERS(ID),
)

CREATE TABLE SUBJECTS(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    NAME NVARCHAR(100) NOT NULL CHECK(LEN(NAME) > 0) UNIQUE,
)

CREATE TABLE TEACHERS(
    ID INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
    NAME NVARCHAR(100) NOT NULL CHECK(LEN(NAME) > 0) UNIQUE,
    SALARY MONEY NOT NULL CHECK (SALARY > 0),
    SURNAME NVARCHAR(MAX) NOT NULL CHECK(LEN(SURNAME) > 0)
)



SELECT T.SURNAME, T.NAME, G.NAME AS GROUP_NAME
FROM TEACHERS T
CROSS JOIN GROUPS G;


SELECT F.NAME
FROM FACULTIES F
JOIN DEPARTMENTS D ON F.ID = D.FACULTYID
WHERE D.FINANCING > F.FINANCING;


SELECT C.SURNAME, C.NAME, G.NAME AS GROUP_NAME
FROM CURATORS C
JOIN GROUPSCURATORS GC ON C.ID = GC.CURATORID
JOIN GROUPS G ON GC.GROUPID = G.ID;


SELECT T.NAME, T.SURNAME
FROM TEACHERS T
JOIN LECTURES L ON T.ID = L.TEACHERID
JOIN GROUPSLECTURES GL ON L.ID = GL.LECTUREID
JOIN GROUPS G ON GL.GROUPID = G.ID
WHERE G.NAME = 'P107';


SELECT DISTINCT T.SURNAME, T.NAME, F.NAME AS FACULTY_NAME
FROM TEACHERS T
JOIN LECTURES L ON T.ID = L.TEACHERID
JOIN SUBJECTS S ON L.SUBJECTID = S.ID
JOIN DEPARTMENTS D ON S.ID = D.ID
JOIN FACULTIES F ON D.FACULTYID = F.ID;

SELECT D.NAME AS DEPARTMENT_NAME, G.NAME AS GROUP_NAME
FROM DEPARTMENTS D
JOIN GROUPS G ON D.ID = G.DEPARTMENTID;


SELECT S.NAME AS SUBJECT_NAME
FROM SUBJECTS S
JOIN LECTURES L ON S.ID = L.SUBJECTID
JOIN TEACHERS T ON L.TEACHERID = T.ID
WHERE T.NAME = 'Samantha' AND T.SURNAME = 'Adams';


SELECT DISTINCT D.NAME AS DEPARTMENT_NAME
FROM DEPARTMENTS D
JOIN GROUPS G ON D.ID = G.DEPARTMENTID
JOIN GROUPSLECTURES GL ON G.ID = GL.GROUPID
JOIN LECTURES L ON GL.LECTUREID = L.ID
JOIN SUBJECTS S ON L.SUBJECTID = S.ID
WHERE S.NAME = 'Database Theory';


SELECT G.NAME AS GROUP_NAME
FROM GROUPS G
JOIN DEPARTMENTS D ON G.DEPARTMENTID = D.ID
JOIN FACULTIES F ON D.FACULTYID = F.ID
WHERE F.NAME = 'Computer Science';


SELECT G.NAME AS GROUP_NAME, F.NAME AS FACULTY_NAME
FROM GROUPS G
JOIN DEPARTMENTS D ON G.DEPARTMENTID = D.ID
JOIN FACULTIES F ON D.FACULTYID = F.ID
WHERE G.YEAR = 5;

SELECT T.NAME, T.SURNAME, S.NAME AS SUBJECT_NAME, G.NAME AS GROUP_NAME
FROM TEACHERS T
JOIN LECTURES L ON T.ID = L.TEACHERID
JOIN SUBJECTS S ON L.SUBJECTID = S.ID
JOIN GROUPSLECTURES GL ON L.ID = GL.LECTUREID
JOIN GROUPS G ON GL.GROUPID = G.ID
WHERE L.LECTUREROOM = 'B103';
